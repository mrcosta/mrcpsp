apply plugin: "groovy"
apply plugin: "idea"
apply plugin: "sonar-runner"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.1.0"
    }
}
apply plugin: 'cobertura'

cobertura {
    coverageExcludes = ['.*mrcpsp.model.enum.*', '.*mrcpsp.utils.*']
}

idea.module.excludeDirs = [file('bin'), file('.idea'), file('.settings'), file('.gradle'), file('build'), file('out')]

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

sourceSets {
    test {
        groovy { srcDir 'test/' }
    }
}

dependencies {
	compile 'org.codehaus.groovy:groovy-all:1.8.6'
	
	compile 'org.apache.commons:commons-math3:3.2'
    compile 'commons-io:commons-io:2.4'
    compile 'com.esotericsoftware.kryo:kryo:2.22'
    compile 'log4j:log4j:1.2.17'
    compile 'com.google.guava:guava:14.0.1'
    compile 'commons-lang:commons-lang:2.5'
    compile name: 'gantt-generator'

	testCompile "org.spockframework:spock-core:0.7-groovy-1.8"
    testCompile "junit:junit:4.11"
	testCompile "cglib:cglib-nodep:2.2.2"
    testCompile "org.hamcrest:hamcrest-core:1.3"
}


task wrapper(type:Wrapper) {
	gradleVersion = '1.8'
}

task(run, dependsOn: 'classes', type: JavaExec) {
	main = 'mrcpsp.process.MmRunner'
	classpath = sourceSets.main.runtimeClasspath
}

sonarRunner {
    sonarProperties {
        property "sonar.host.url", "http://my.server.com"
        property "sonar.jdbc.url", "jdbc:mysql://my.server.com/sonar"
        property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.jdbc.username", "Fred Flintstone"
        property "sonar.jdbc.password", "very clever"
    }
}
